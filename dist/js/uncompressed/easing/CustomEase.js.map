{"version":3,"sources":["uncompressed/easing/CustomEase.js"],"names":["_gsScope","module","exports","global","window","_gsQueue","push","_gsDefine","Ease","_numbersExp","_svgPathExp","_scientific","_needsParsingExp","_bezierError","_bezierToPoints","x1","y1","x2","y2","x3","y3","x4","y4","threshold","points","index","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","dx","dy","d2","Math","abs","d3","length","x","y","splice","_pathDataToBezier","d","a","replace","m","n","match","path","relativeX","relativeY","elements","l","i","command","isRelative","segment","startX","startY","prevCommand","difX","difY","isNaN","toUpperCase","closed","_findMinimum","values","min","_normalize","height","originY","max","tx","ty","sx","sy","_getRatio","p","point","lookup","nx","cx","cy","CustomEase","id","data","config","_calcEnd","map","getRatio","setData","prototype","constructor","closest","a1","a2","inc","j","prevPoint","precision","fast","test","indexOf","unshift","rawBezier","getSVGData","create","version","bezierToPoints","get","ease","rnd","width","e","slope","prevX","prevY","invert","console","log","document","querySelector","setAttribute","join","pop","name","getGlobal","GreenSockGlobals","require","define","amd"],"mappings":"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","sourcesContent":["/*!\n * VERSION: 0.2.2\n * DATE: 2018-02-15\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n *\n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\nvar _gsScope = (typeof(module) !== \"undefined\" && module.exports && typeof(global) !== \"undefined\") ? global : this || window; //helps ensure compatibility with AMD/RequireJS and CommonJS/Node\n(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push( function() {\n\n\t\"use strict\";\n\n\t_gsScope._gsDefine(\"easing.CustomEase\", [\"easing.Ease\"], function(Ease) {\n\n\t\tvar _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t\t_svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t\t_scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n\t\t\t_needsParsingExp = /[cLlsS]/g,\n\t\t\t_bezierError = \"CustomEase only accepts Cubic Bezier data.\",\n\t\t\t_bezierToPoints = function (x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n\t\t\t\tvar x12 = (x1 + x2) / 2,\n\t\t\t\t\ty12 = (y1 + y2) / 2,\n\t\t\t\t\tx23 = (x2 + x3) / 2,\n\t\t\t\t\ty23 = (y2 + y3) / 2,\n\t\t\t\t\tx34 = (x3 + x4) / 2,\n\t\t\t\t\ty34 = (y3 + y4) / 2,\n\t\t\t\t\tx123 = (x12 + x23) / 2,\n\t\t\t\t\ty123 = (y12 + y23) / 2,\n\t\t\t\t\tx234 = (x23 + x34) / 2,\n\t\t\t\t\ty234 = (y23 + y34) / 2,\n\t\t\t\t\tx1234 = (x123 + x234) / 2,\n\t\t\t\t\ty1234 = (y123 + y234) / 2,\n\t\t\t\t\tdx = x4 - x1,\n\t\t\t\t\tdy = y4 - y1,\n\t\t\t\t\td2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx),\n\t\t\t\t\td3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx),\n\t\t\t\t\tlength;\n\t\t\t\tif (!points) {\n\t\t\t\t\tpoints = [{x: x1, y: y1}, {x: x4, y: y4}];\n\t\t\t\t\tindex = 1;\n\t\t\t\t}\n\t\t\t\tpoints.splice(index || points.length - 1, 0, {x: x1234, y: y1234});\n\t\t\t\tif ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n\t\t\t\t\tlength = points.length;\n\t\t\t\t\t_bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n\t\t\t\t\t_bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 1 + (points.length - length));\n\t\t\t\t}\n\t\t\t\treturn points;\n\t\t\t},\n\n\t\t\t_pathDataToBezier = function (d) {\n\t\t\t\tvar a = (d + \"\").replace(_scientific, function (m) {\n\t\t\t\t\t\t\tvar n = +m;\n\t\t\t\t\t\t\treturn (n < 0.0001 && n > -0.0001) ? 0 : n;\n\t\t\t\t\t\t}).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n\t\t\t\t\tpath = [],\n\t\t\t\t\trelativeX = 0,\n\t\t\t\t\trelativeY = 0,\n\t\t\t\t\telements = a.length,\n\t\t\t\t\tl = 2,\n\t\t\t\t\ti, x, y, command, isRelative, segment, startX, startY, prevCommand, difX, difY;\n\t\t\t\tfor (i = 0; i < elements; i++) {\n\t\t\t\t\tprevCommand = command;\n\t\t\t\t\tif (isNaN(a[i])) {\n\t\t\t\t\t\tcommand = a[i].toUpperCase();\n\t\t\t\t\t\tisRelative = (command !== a[i]); //lower case means relative\n\t\t\t\t\t} else { //commands like \"C\" can be strung together without any new command characters between.\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t\tx = +a[i + 1];\n\t\t\t\t\ty = +a[i + 2];\n\t\t\t\t\tif (isRelative) {\n\t\t\t\t\t\tx += relativeX;\n\t\t\t\t\t\ty += relativeY;\n\t\t\t\t\t}\n\t\t\t\t\tif (!i) {\n\t\t\t\t\t\tstartX = x;\n\t\t\t\t\t\tstartY = y;\n\t\t\t\t\t}\n\t\t\t\t\tif (command === \"M\") {\n\t\t\t\t\t\tif (segment && segment.length < 8) { //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n\t\t\t\t\t\t\tpath.length -= 1;\n\t\t\t\t\t\t\tl = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trelativeX = startX = x;\n\t\t\t\t\t\trelativeY = startY = y;\n\t\t\t\t\t\tsegment = [x, y];\n\t\t\t\t\t\tl = 2;\n\t\t\t\t\t\tpath.push(segment);\n\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\tcommand = \"L\"; //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n\n\t\t\t\t\t} else if (command === \"C\") {\n\t\t\t\t\t\tif (!segment) {\n\t\t\t\t\t\t\tsegment = [0, 0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegment[l++] = x;\n\t\t\t\t\t\tsegment[l++] = y;\n\t\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\t\trelativeX = relativeY = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegment[l++] = relativeX + a[i + 3] * 1; //note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n\t\t\t\t\t\tsegment[l++] = relativeY + a[i + 4] * 1;\n\t\t\t\t\t\tsegment[l++] = relativeX = relativeX + a[i + 5] * 1;\n\t\t\t\t\t\tsegment[l++] = relativeY = relativeY + a[i + 6] * 1;\n\t\t\t\t\t\ti += 6;\n\n\t\t\t\t\t} else if (command === \"S\") {\n\t\t\t\t\t\tif (prevCommand === \"C\" || prevCommand === \"S\") {\n\t\t\t\t\t\t\tdifX = relativeX - segment[l - 4];\n\t\t\t\t\t\t\tdifY = relativeY - segment[l - 3];\n\t\t\t\t\t\t\tsegment[l++] = relativeX + difX;\n\t\t\t\t\t\t\tsegment[l++] = relativeY + difY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsegment[l++] = relativeX;\n\t\t\t\t\t\t\tsegment[l++] = relativeY;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegment[l++] = x;\n\t\t\t\t\t\tsegment[l++] = y;\n\t\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\t\trelativeX = relativeY = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegment[l++] = relativeX = relativeX + a[i + 3] * 1;\n\t\t\t\t\t\tsegment[l++] = relativeY = relativeY + a[i + 4] * 1;\n\t\t\t\t\t\ti += 4;\n\n\t\t\t\t\t} else if (command === \"L\" || command === \"Z\") {\n\t\t\t\t\t\tif (command === \"Z\") {\n\t\t\t\t\t\t\tx = startX;\n\t\t\t\t\t\t\ty = startY;\n\t\t\t\t\t\t\tsegment.closed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (command === \"L\" || Math.abs(relativeX - x) > 0.5 || Math.abs(relativeY - y) > 0.5) {\n\t\t\t\t\t\t\tsegment[l++] = relativeX + (x - relativeX) / 3;\n\t\t\t\t\t\t\tsegment[l++] = relativeY + (y - relativeY) / 3;\n\t\t\t\t\t\t\tsegment[l++] = relativeX + (x - relativeX) * 2 / 3;\n\t\t\t\t\t\t\tsegment[l++] = relativeY + (y - relativeY) * 2 / 3;\n\t\t\t\t\t\t\tsegment[l++] = x;\n\t\t\t\t\t\t\tsegment[l++] = y;\n\t\t\t\t\t\t\tif (command === \"L\") {\n\t\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trelativeX = x;\n\t\t\t\t\t\trelativeY = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow _bezierError;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn path[0];\n\t\t\t},\n\n\t\t\t_findMinimum = function (values) {\n\t\t\t\tvar l = values.length,\n\t\t\t\t\tmin = 999999999999,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 1; i < l; i += 6) {\n\t\t\t\t\tif (+values[i] < min) {\n\t\t\t\t\t\tmin = +values[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn min;\n\t\t\t},\n\n\t\t\t_normalize = function (values, height, originY) { //takes all the points and translates/scales them so that the x starts at 0 and ends at 1.\n\t\t\t\tif (!originY && originY !== 0) {\n\t\t\t\t\toriginY = Math.max(+values[values.length-1], +values[1]);\n\t\t\t\t}\n\t\t\t\tvar tx = +values[0] * -1,\n\t\t\t\t\tty = -originY,\n\t\t\t\t\tl = values.length,\n\t\t\t\t\tsx = 1 / (+values[l - 2] + tx),\n\t\t\t\t\tsy = -height || ((Math.abs(+values[l - 1] - +values[1]) < 0.01 * (+values[l - 2] - +values[0])) ? _findMinimum(values) + ty : +values[l - 1] + ty),\n\t\t\t\t\ti;\n\t\t\t\tif (sy) { //typically y ends at 1 (so that the end values are reached)\n\t\t\t\t\tsy = 1 / sy;\n\t\t\t\t} else { //in case the ease returns to its beginning value, scale everything proportionally\n\t\t\t\t\tsy = -sx;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < l; i += 2) {\n\t\t\t\t\tvalues[i] = (+values[i] + tx) * sx;\n\t\t\t\t\tvalues[i + 1] = (+values[i + 1] + ty) * sy;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_getRatio = function (p) {\n\t\t\t\tvar point = this.lookup[(p * this.l) | 0] || this.lookup[this.l - 1];\n\t\t\t\tif (point.nx < p) {\n\t\t\t\t\tpoint = point.n;\n\t\t\t\t}\n\t\t\t\treturn point.y + ((p - point.x) / point.cx) * point.cy;\n\t\t\t},\n\n\n\t\t\tCustomEase = function (id, data, config) {\n\t\t\t\tthis._calcEnd = true;\n\t\t\t\tthis.id = id;\n\t\t\t\tif (id) {\n\t\t\t\t\tEase.map[id] = this;\n\t\t\t\t}\n\t\t\t\tthis.getRatio = _getRatio; //speed optimization, faster lookups.\n\t\t\t\tthis.setData(data, config);\n\t\t\t},\n\t\t\tp = CustomEase.prototype = new Ease();\n\n\t\tp.constructor = CustomEase;\n\n\t\tp.setData = function(data, config) {\n\t\t\tdata = data || \"0,0,1,1\";\n\t\t\tvar values = data.match(_numbersExp),\n\t\t\t\tclosest = 1,\n\t\t\t\tpoints = [],\n\t\t\t\tl, a1, a2, i, inc, j, point, prevPoint, p, precision;\n\t\t\tconfig = config || {};\n\t\t\tprecision = config.precision || 1;\n\t\t\tthis.data = data;\n\t\t\tthis.lookup = [];\n\t\t\tthis.points = points;\n\t\t\tthis.fast = (precision <= 1);\n\t\t\tif (_needsParsingExp.test(data) || (data.indexOf(\"M\") !== -1 && data.indexOf(\"C\") === -1)) {\n\t\t\t\tvalues = _pathDataToBezier(data);\n\t\t\t}\n\t\t\tl = values.length;\n\t\t\tif (l === 4) {\n\t\t\t\tvalues.unshift(0, 0);\n\t\t\t\tvalues.push(1, 1);\n\t\t\t\tl = 8;\n\t\t\t} else if ((l - 2) % 6) {\n\t\t\t\tthrow _bezierError;\n\t\t\t}\n\t\t\tif (+values[0] !== 0 || +values[l - 2] !== 1) {\n\t\t\t\t_normalize(values, config.height, config.originY);\n\t\t\t}\n\n\t\t\tthis.rawBezier = values;\n\n\t\t\tfor (i = 2; i < l; i += 6) {\n\t\t\t\ta1 = {x: +values[i - 2], y: +values[i - 1]};\n\t\t\t\ta2 = {x: +values[i + 4], y: +values[i + 5]};\n\t\t\t\tpoints.push(a1, a2);\n\t\t\t\t_bezierToPoints(a1.x, a1.y, +values[i], +values[i + 1], +values[i + 2], +values[i + 3], a2.x, a2.y, 1 / (precision * 200000), points, points.length - 1);\n\t\t\t}\n\t\t\tl = points.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tpoint = points[i];\n\t\t\t\tprevPoint = points[i - 1] || point;\n\t\t\t\tif (point.x > prevPoint.x || (prevPoint.y !== point.y && prevPoint.x === point.x) || point === prevPoint) { //if a point goes BACKWARD in time or is a duplicate, just drop it.\n\t\t\t\t\tprevPoint.cx = point.x - prevPoint.x; //change in x between this point and the next point (performance optimization)\n\t\t\t\t\tprevPoint.cy = point.y - prevPoint.y;\n\t\t\t\t\tprevPoint.n = point;\n\t\t\t\t\tprevPoint.nx = point.x; //next point's x value (performance optimization, making lookups faster in getRatio()). Remember, the lookup will always land on a spot where it's either this point or the very next one (never beyond that)\n\t\t\t\t\tif (this.fast && i > 1 && Math.abs(prevPoint.cy / prevPoint.cx - points[i - 2].cy / points[i - 2].cx) > 2) { //if there's a sudden change in direction, prioritize accuracy over speed. Like a bounce ease - you don't want to risk the sampling chunks landing on each side of the bounce anchor and having it clipped off.\n\t\t\t\t\t\tthis.fast = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (prevPoint.cx < closest) {\n\t\t\t\t\t\tif (!prevPoint.cx) {\n\t\t\t\t\t\t\tprevPoint.cx = 0.001; //avoids math problems in getRatio() (dividing by zero)\n\t\t\t\t\t\t\tif (i === l - 1) { //in case the final segment goes vertical RIGHT at the end, make sure we end at the end.\n\t\t\t\t\t\t\t\tprevPoint.x -= 0.001;\n\t\t\t\t\t\t\t\tclosest = Math.min(closest, 0.001);\n\t\t\t\t\t\t\t\tthis.fast = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclosest = prevPoint.cx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpoints.splice(i--, 1);\n\t\t\t\t\tl--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tl = (1 / closest + 1) | 0;\n\t\t\tthis.l = l; //record for speed optimization\n\t\t\tinc = 1 / l;\n\t\t\tj = 0;\n\t\t\tpoint = points[0];\n\t\t\tif (this.fast) {\n\t\t\t\tfor (i = 0; i < l; i++) { //for fastest lookups, we just sample along the path at equal x (time) distance. Uses more memory and is slightly less accurate for anchors that don't land on the sampling points, but for the vast majority of eases it's excellent (and fast).\n\t\t\t\t\tp = i * inc;\n\t\t\t\t\tif (point.nx < p) {\n\t\t\t\t\t\tpoint = points[++j];\n\t\t\t\t\t}\n\t\t\t\t\ta1 = point.y + ((p - point.x) / point.cx) * point.cy;\n\t\t\t\t\tthis.lookup[i] = {x: p, cx: inc, y: a1, cy: 0, nx: 9};\n\t\t\t\t\tif (i) {\n\t\t\t\t\t\tthis.lookup[i - 1].cy = a1 - this.lookup[i - 1].y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.lookup[l - 1].cy = points[points.length - 1].y - a1;\n\t\t\t} else { //this option is more accurate, ensuring that EVERY anchor is hit perfectly. Clipping across a bounce, for example, would never happen.\n\t\t\t\tfor (i = 0; i < l; i++) { //build a lookup table based on the smallest distance so that we can instantly find the appropriate point (well, it'll either be that point or the very next one). We'll look up based on the linear progress. So it's it's 0.5 and the lookup table has 100 elements, it'd be like lookup[Math.floor(0.5 * 100)]\n\t\t\t\t\tif (point.nx < i * inc) {\n\t\t\t\t\t\tpoint = points[++j];\n\t\t\t\t\t}\n\t\t\t\t\tthis.lookup[i] = point;\n\t\t\t\t}\n\n\t\t\t\tif (j < points.length - 1) {\n\t\t\t\t\tthis.lookup[i-1] = points[points.length-2];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._calcEnd = (points[points.length-1].y !== 1 || points[0].y !== 0); //ensures that we don't run into floating point errors. As long as we're starting at 0 and ending at 1, tell GSAP to skip the final calculation and use 0/1 as the factor.\n\t\t\treturn this;\n\t\t};\n\n\t\tp.getRatio = _getRatio;\n\n\t\tp.getSVGData = function(config) {\n\t\t\treturn CustomEase.getSVGData(this, config);\n\t\t};\n\n\t\tCustomEase.create = function (id, data, config) {\n\t\t\treturn new CustomEase(id, data, config);\n\t\t};\n\n\t\tCustomEase.version = \"0.2.2\";\n\n\t\tCustomEase.bezierToPoints = _bezierToPoints;\n\t\tCustomEase.get = function (id) {\n\t\t\treturn Ease.map[id];\n\t\t};\n\t\tCustomEase.getSVGData = function(ease, config) {\n\t\t\tconfig = config || {};\n\t\t\tvar rnd = 1000,\n\t\t\t\twidth = config.width || 100,\n\t\t\t\theight = config.height || 100,\n\t\t\t\tx = config.x || 0,\n\t\t\t\ty = (config.y || 0) + height,\n\t\t\t\te = config.path,\n\t\t\t\ta, slope, i, inc, tx, ty, precision, threshold, prevX, prevY;\n\t\t\tif (config.invert) {\n\t\t\t\theight = -height;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t\tease = ease.getRatio ? ease : Ease.map[ease] || console.log(\"No ease found: \", ease);\n\t\t\tif (!ease.rawBezier) {\n\t\t\t\ta = [\"M\" + x + \",\" + y];\n\t\t\t\tprecision = Math.max(5, (config.precision || 1) * 200);\n\t\t\t\tinc = 1 / precision;\n\t\t\t\tprecision += 2;\n\t\t\t\tthreshold = 5 / precision;\n\t\t\t\tprevX = (((x + inc * width) * rnd) | 0) / rnd;\n\t\t\t\tprevY = (((y + ease.getRatio(inc) * -height) * rnd) | 0) / rnd;\n\t\t\t\tslope = (prevY - y) / (prevX - x);\n\t\t\t\tfor (i = 2; i < precision; i++) {\n\t\t\t\t\ttx = (((x + i * inc * width) * rnd) | 0) / rnd;\n\t\t\t\t\tty = (((y + ease.getRatio(i * inc) * -height) * rnd) | 0) / rnd;\n\t\t\t\t\tif (Math.abs((ty - prevY) / (tx - prevX) - slope) > threshold || i === precision - 1) { //only add points when the slope changes beyond the threshold\n\t\t\t\t\t\ta.push(prevX + \",\" + prevY);\n\t\t\t\t\t\tslope = (ty - prevY) / (tx - prevX);\n\t\t\t\t\t}\n\t\t\t\t\tprevX = tx;\n\t\t\t\t\tprevY = ty;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ta = [];\n\t\t\t\tprecision = ease.rawBezier.length;\n\t\t\t\tfor (i = 0; i < precision; i += 2) {\n\t\t\t\t\ta.push((((x + ease.rawBezier[i] * width) * rnd) | 0) / rnd + \",\" + (((y + ease.rawBezier[i + 1] * -height) * rnd) | 0) / rnd);\n\t\t\t\t}\n\t\t\t\ta[0] = \"M\" + a[0];\n\t\t\t\ta[1] = \"C\" + a[1];\n\t\t\t}\n\t\t\tif (e) {\n\t\t\t\t(typeof(e) === \"string\" ? document.querySelector(e) : e).setAttribute(\"d\", a.join(\" \"));\n\t\t\t}\n\t\t\treturn a.join(\" \");\n\t\t};\n\n\t\treturn CustomEase;\n\n\t}, true);\n\n}); if (_gsScope._gsDefine) { _gsScope._gsQueue.pop()(); }\n\n//export to AMD/RequireJS and CommonJS/Node (precursor to full modular build system coming at a later date)\n(function(name) {\n\t\"use strict\";\n\tvar getGlobal = function() {\n\t\treturn (_gsScope.GreenSockGlobals || _gsScope)[name];\n\t};\n\tif (typeof(module) !== \"undefined\" && module.exports) { //node\n\t\trequire(\"../TweenLite.js\");\n\t\tmodule.exports = getGlobal();\n\t} else if (typeof(define) === \"function\" && define.amd) { //AMD\n\t\tdefine([\"TweenLite\"], getGlobal);\n\t}\n}(\"CustomEase\"));"],"file":"CustomEase.js"}